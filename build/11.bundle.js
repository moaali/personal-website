webpackJsonp([11,35],{102:function(e,t,n){"use strict";(function(e){function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=r(n(2)),a=r(n(221)),s=r(n(57)),c=r(n(772));!function(){var t=n(1).enterModule;t&&t(e)}();var l=function(){return o.default.createElement(s.default,null,o.default.createElement("div",{id:"post"},o.default.createElement("hgroup",{className:"mB-60"},o.default.createElement("h5",{className:"c-minor"},"Oct 01, 2017"),o.default.createElement("h1",{className:"c-blocker"},"ES6 Overview - Object Literal Enhancements"),o.default.createElement("hr",null)),o.default.createElement(a.default,{source:c.default})))},u=l,p=u;t.default=p,function(){var t=n(1).default,r=n(1).leaveModule;t&&(t.register(l,"Es6OverviewObjectLiteralEnhancements","E:\\Dropbox\\Projects\\personal-website\\src\\screens\\Blog\\components\\Es6OverviewObjectLiteralEnhancements\\index.jsx"),t.register(u,"default","E:\\Dropbox\\Projects\\personal-website\\src\\screens\\Blog\\components\\Es6OverviewObjectLiteralEnhancements\\index.jsx"),r(e))}()}).call(t,n(7)(e))},772:function(e,t){e.exports="### Object Literal Enhancements\n\n#### Description\nObject literals now supports setting the prototype at construction time, shorthand assignments, shorthand methods, super calls and computed property names.\n\n#### Examples\n```javascript\nconst\n  key = 'key',\n  prop = 'value',\n  Prototype = Object.create(null),\n  obj = {\n    __proto__: Prototype,      // Setting prototype at construction\n    prop,                      // Shorthand property for prop: prop\n    method() {}                // Shorthand method for method : function () {}\n    toString() {\n     return super.toString();  // Super call is supported\n    },\n    [key]: 42                  // Computed property naming\n  };\n```\n"}});