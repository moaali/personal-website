webpackJsonp([1,25],{112:function(e,t,n){"use strict";(function(e){function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=l(n(2)),a=l(n(221)),i=l(n(57)),o=l(n(782));!function(){var t=n(1).enterModule;t&&t(e)}();var c=function(){return r.default.createElement(i.default,null,r.default.createElement("div",{id:"post"},r.default.createElement("hgroup",{className:"mB-60"},r.default.createElement("h5",{className:"c-minor"},"Oct 15, 2017"),r.default.createElement("h1",{className:"c-blocker"},"ES6 Overview - Tail Call Optimization (TCO)"),r.default.createElement("hr",null)),r.default.createElement(a.default,{source:o.default})))},s=c,u=s;t.default=u,function(){var t=n(1).default,l=n(1).leaveModule;t&&(t.register(c,"Es6OverviewTailCallOptimizationTco","E:\\personal-website\\src\\screens\\Blog\\components\\Es6OverviewTailCallOptimizationTco\\index.jsx"),t.register(s,"default","E:\\personal-website\\src\\screens\\Blog\\components\\Es6OverviewTailCallOptimizationTco\\index.jsx"),l(e))}()}).call(t,n(7)(e))},782:function(e,t){e.exports="### Tail Call Optimization (TCO)\r\n\r\n**TCO** makes it possible to implement recursive function calls without being worried about call stack overflow.\r\n  1. TCO is a JavaScript engine implementation feature, it cannot be implemented via a transpiler if the browser does not support it.\r\n  2. Works only in `strict mode`\r\n\r\n```javascript\r\nfunction a() {\r\n  return b() // tail call\r\n}\r\n\r\nfunction b() {\r\n  return 'Hello World'\r\n}\r\n\r\na() // => Hello World\r\n```\r\n"}});