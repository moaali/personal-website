webpackJsonp([11,35],{102:function(e,t,r){"use strict";(function(e){function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(r(2)),a=n(r(221)),s=n(r(57)),l=n(r(772));!function(){var t=r(1).enterModule;t&&t(e)}();var c=function(){return o.default.createElement(s.default,null,o.default.createElement("div",{id:"post"},o.default.createElement("hgroup",{className:"mB-60"},o.default.createElement("h5",{className:"c-minor"},"Oct 01, 2017"),o.default.createElement("h1",{className:"c-blocker"},"ES6 Overview - Object Literal Enhancements"),o.default.createElement("hr",null)),o.default.createElement(a.default,{source:l.default})))},u=c,i=u;t.default=i,function(){var t=r(1).default,n=r(1).leaveModule;t&&(t.register(c,"Es6OverviewObjectLiteralEnhancements","E:\\personal-website\\src\\screens\\Blog\\components\\Es6OverviewObjectLiteralEnhancements\\index.jsx"),t.register(u,"default","E:\\personal-website\\src\\screens\\Blog\\components\\Es6OverviewObjectLiteralEnhancements\\index.jsx"),n(e))}()}).call(t,r(7)(e))},772:function(e,t){e.exports="### Object Literal Enhancements\r\n\r\n#### Description\r\nObject literals now supports setting the prototype at construction time, shorthand assignments, shorthand methods, super calls and computed property names.\r\n\r\n#### Examples\r\n```javascript\r\nconst\r\n  key = 'key',\r\n  prop = 'value',\r\n  Prototype = Object.create(null),\r\n  obj = {\r\n    __proto__: Prototype,      // Setting prototype at construction\r\n    prop,                      // Shorthand property for prop: prop\r\n    method() {}                // Shorthand method for method : function () {}\r\n    toString() {\r\n     return super.toString();  // Super call is supported\r\n    },\r\n    [key]: 42                  // Computed property naming\r\n  };\r\n```\r\n"}});