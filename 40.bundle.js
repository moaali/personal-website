webpackJsonp([40],{767:function(r,n){r.exports="### Iterables & Iterators\r\n\r\n#### Description\r\n- **Iterable**: Object with `[Symbol.iterator]` method as own property which when called returns an iterator.\r\n- **Iterator**: Object containing `next` method as own property which when called returns object with two properties:\r\n  - **`value`**: Holds current value of the iterator.\r\n  - **`done`**: Boolean defines iteration process end.\r\n\r\n\r\n\r\n#### Examples\r\n```javascript\r\n/* For Demo Purposes */\r\nconst\r\n  iterator = {\r\n    // ...\r\n    next: () => {\r\n      // ...\r\n      return {\r\n        value : /* Any JavaScript value */,\r\n        done  : /* ture | false */\r\n      }\r\n    }\r\n  },\r\n\r\n  iterable = {\r\n    // ...\r\n    [Symbol.iterator]: () => {\r\n      // ...\r\n      return iterator\r\n    }\r\n  }\r\n```\r\n\r\n\r\n\r\n#### Iterable Objects\r\n- **`Array`**\r\n- **`TypedArray`**\r\n- **`Map`**\r\n- **`Set`**\r\n- **`NodeList`**\r\n- Objects returned from `entries()`, `keys()`, `values()` methods.\r\n\r\n\r\n\r\n#### Iterable Consumers\r\n- **`for ... of`** loop\r\n- **Spread Operator**\r\n- **Destructuring**\r\n\r\n##### Examples\r\n```javascript\r\nconst arr = [1, 2, 3];\r\n\r\nfor (elem of arr) {\r\n  console.log(elem) // 1, 2, 3\r\n}\r\n\r\nconst add = (a, b, c) => a + b + c;\r\nadd(...arr) // 6\r\n\r\nconst [a, b, c] = arr;\r\nconsole.log(a) // => 1\r\nconsole.log(b) // => 2\r\nconsole.log(c) // => 3\r\n```\r\n"}});